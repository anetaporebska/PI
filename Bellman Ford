#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

#define MAX_INT 320000


void BellmanFord(int n, int k, int G[k][3],int b,int e){
    int dist[n];
    for(int i=0; i<n; i+=1){
        dist[i]=MAX_INT;
    }
    dist[b]=0;
    for(int i=0; i<n-1; i+=1){
        for(int j=0; j<k; j+=1){
            int x=G[j][0];
            int y=G[j][1];
            int w=G[j][2];
            if (dist[x] != MAX_INT && dist[x]+w<dist[y]){
                dist[y]=dist[x]+w;
            }
        }
    }
    for(int j=0; j<k; j+=1){
        int x=G[j][0];
        int y=G[j][1];
        int w=G[j][2];
        if (dist[x] != MAX_INT && dist[x]+w<dist[y]){
            printf("CYCLE");
            return;
        }
    }
    if(dist[e]==MAX_INT){
        printf("NO");
    }
    else{
        printf("%d",dist[e]);
    }
    return;
}


int main()
{
    int n;
    int k;
    scanf("%d %d", &n, &k);
    int G[k][3];
    int b;
    int e;
    scanf("%d %d",&b, &e);
    int i=0;
    for(int i=0; i<k; i+=1){
        int x;
        int y;
        int d;
        scanf("%d %d %d", &x,&y,&d);
        G[i][0]=x;
        G[i][1]=y;
        G[i][2]=d;

    }
    BellmanFord(n,k,G,b,e);
    return 0;
}
