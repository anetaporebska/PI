#include <stdio.h>
#include <stdlib.h>
#include <stdint.h>

#define MAX_INT 320000


void FloydWarshall(int n, int G[n][n]){

    int i,j,k;

    for (k = 0; k < n; k++)
    {
        for (i = 0; i < n; i++)
        {
            for (j = 0; j < n; j++)
            {
                if ( G[i][k]!=MAX_INT && G[k][j]!=MAX_INT && G[i][k] + G[k][j] < G[i][j])
                    G[i][j] = G[i][k] + G[k][j];
            }
        }
    }

}

int min(int a, int b){
    if(a<b){
        return a;
    }
    return b;
}

int main()
{
    int n; //wierzchołki
    int k;  //krawędzie
    int q;
    scanf("%d %d %d", &n, &k,&q);
    int G[n][n];
    for(int i=0; i<n; i+=1){
        for(int j=0; j<n; j+=1){
            G[i][j]=MAX_INT;
        }
    }
    for(int i=0; i<n; i+=1){
        G[i][i]=0;
    }
    int x;
    int y;
    int w;
    for(int i=0; i<k; i+=1){
        int l;
        scanf("%d",&l);
        scanf("%d %d",&x,&w);
        for(int j=0; j<l-1; j+=1){
            scanf("%d",&y);
            G[x][y]=min(G[x][y],w);
            G[y][x]=min(G[y][x],w);
            x=y;
            if (j==l-2){
                break;
            }
            scanf("%d",&w);

        }
    }

    FloydWarshall(n,G);
    int arr[q*2];
    int j=0;
    for(int i=0; i<q; i+=1){
        scanf("%d %d",&x,&y);
        arr[j]=x;
        j+=1;
        arr[j]=y;
        j+=1;
    }
    j=0;
    for(int i=0; i<q; i+=1){
        x=arr[j];
        j+=1;
        y=arr[j];
        j+=1;
        printf("%d\n",G[x][y]);
    }

    return 0;
}
