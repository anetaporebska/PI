
#include <stdio.h>
#include <stdlib.h>

void insertionSort(int tab[], int n);

int main(void) {
    
    int m=0;
    int n=0;
    
    scanf("%d",&m);
    scanf("%d",&n);
    
    int *T1;
    T1=(int*)malloc(sizeof(T1)*m);
    int *T2;
    T2=(int*)malloc(sizeof(T2)*n);
    
    
    for(int i=0; i<m; i+=1){
        scanf("%d",&T1[i]);
    }
    for(int i=0; i<n; i+=1){
        scanf("%d",&T2[i]);
    }
    
    
    int *T3;
    T3=(int*)malloc(sizeof(T3)*(m+n));
    
    insertionSort(T1,m);
    insertionSort(T2,n);
    
    
    int i1=0;
    int i2=0;
    int i3=0;
    
    if (T1[i1]<T2[i2]){
        T3[i3]=T1[i1];
        i3+=1;
        i1+=1;
    }
    else{
        T3[i3]=T2[i2];
        i3+=1;
        i2+=1;
    }
    
    while(i1<m && i2<n){
        if(T1[i1]<T2[i2]){
            if(T3[i3-1]!=T1[i1]){
                T3[i3]=T1[i1];
                i3+=1;
                i1+=1;
            }
            else{
                i1+=1;
            }
        }
        else{
            if(T3[i3-1]!=T2[i2]){
                T3[i3]=T2[i2];
                i3+=1;
                i2+=1;
            }
            else{
                i2+=1;
            }
        }
    }
    while (i1<m){
        if(T3[i3-1]!=T1[i1]){
                T3[i3]=T1[i1];
                i3+=1;
                i1+=1;
            }
            else{
                i1+=1;
            }
    }
    
    while (i2<n){
        if(T3[i3-1]!=T2[i2]){
                T3[i3]=T2[i2];
                i3+=1;
                i2+=1;
            }
            else{
                i2+=1;
            }
    }
    
    free(T1);
    free(T2);
    
    T3=realloc(T3,i3*sizeof(int));
    
    for(int i=0; i<i3; i+=1){
        printf("%d \n",T3[i]);
    }
    
    return 0;   
}    
	


void insertionSort(int tab[], int n){
    
    for(int i=1; i<n; i+=1){
        int key=tab[i];
        int j=i-1;
        while(j>=0 && tab[j]>key){
            tab[j+1]=tab[j];
            j-=1;
        }
        tab[j+1]=key;
    }
    
}
